@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=700, user-scalable=no" />
    <meta name="description" content="荒木比奈が好きという気持ちをシェアできる全く新しい画期的なWEBサービスっス" />
    <title>ひなすきボタン</title>

    <style>
        html {
            margin: 0;
            height: 100%;
        }

        body {
            margin: 0;
            height: 100%;
            background: linear-gradient(#0ca3fd, #7ffcd0);
            position: relative;
        }

        h1 {
            font-size: 16px;
        }

        #frame {
            margin: auto;
            position: absolute;
            top: 0px;
            bottom: 0px;
            left: 0px;
            right: 0px;
            width: 640px;
            height: 300px;
            background: white;
            opacity: 0.9;
            border-radius: 10px;
            text-align: center;
        }

        #count {
            font-family: Arial sans-serif;
            font-size: 36px;
            margin: 20px 0px;
        }

        #hinasuki {
            background: #5a5de6;
            color: #FFF;
            border-bottom-color: #494cd5;
            font-size: 24px;
            margin: 10px;
            padding: 10px 40px;
        }

        #tweet {
            background: #55acee;
            color: #FFF;
            border-bottom-color: #449bdd;
        }

        #about {
            position: absolute;
            right: 10px;
            bottom: 0px;
        }

        .button {
            display: inline-block;
            padding: 0.5em 1em;
            text-decoration: none;
            border-bottom: solid 4px;
            border-radius: 3px;
            margin: 5px;
        }

            .button:active {
                -ms-transform: translateY(4px);
                -webkit-transform: translateY(4px);
                transform: translateY(4px);
                border-bottom: none;
            }
    </style>
</head>
<body>
    <div id="frame">

        <div id="counter" style="display:none;">
            <h1>荒木比奈が好きという気持ちをシェアできる全く新しい画期的なWEBサービスっス</h1>
            <div id="count">{{ count }}</div>
            <div style="height: 80px;">
                <a id="hinasuki" class="button" href="#" v-on:click="add">ひなすき</a><br />
            </div>
            <div style="height: 50px;">
                <a id="tweet" class="button" href="#" v-on:click="tweet">ツイートする</a><br />
            </div>
            <div id="about">
                ひなすきボタン ver.0.3β <a href="~/Home/About">[ ABOUT ]</a>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/promise-polyfill@7/dist/polyfill.min.js"></script>
    <script src="~/scripts/fetch.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue"></script>
    <script>
        const fetchSpan = 3000;

        const counter = new Vue({
            el: '#counter',
            data: {
                count: @ViewBag.Count,
                realCount: @ViewBag.Count,

                updating: false,
            },
            created: function() {
                this.fetchCount();
            },
            mounted: function () {
                document.getElementById('counter').style.display = '';
                this.updateCount();
            },
            methods: {
                fetchCount: function () {
                    @* Edge16ではfinallyがサポートされていないので、thenとcatchの両方に同じ処理を書く。 *@
                    fetch('@Url.Content("~/api/Hinasuki")')
                        .then(function (response) { return response.json(); })
                        .then(function (count) {
                            counter.realCount = Math.max(count, counter.realCount);
                            setTimeout(counter.fetchCount, fetchSpan);

                            if (!counter.updating &&
                                counter.count !== counter.realCount) {
                                counter.updateCount();
                            }
                        })
                        .catch(function (error) { setTimeout(counter.fetchCount, fetchSpan); });
                },
                updateCount: function () {
                    const diff = this.realCount - this.count;
                    if (diff <= 0) {
                        this.updating = false;
                    } else {
                        this.updating = true;

                        @*
                            差分の値を徐々に追加していくために、2次関数を使用して値を1追加するための更新間隔を決定する。
                            更新間隔の最低値は5FPS(200ms)とする。
                            更新間隔が60FPSよりも短い場合は1Frameに1追加する。
                            更新間隔が60FPSを超える場合は、更新間隔は60FPSとして1Frameに2以上追加する。
                        *@
                        const calculateSpan = 200 / (0.02 * diff * diff + 1);

                        const updateSpan = Math.max(Math.round(calculateSpan), 16); @* 最大60FPSに押さえる。 *@

                        if (16 <= calculateSpan) {
                            this.count += 1;
                        } else {
                            @*
                                差が大きいほど指数関数的に更新間隔が小さくなる→指数関数的に追加する値が大きくなるため、
                                ある地点で実際の値より遙かに大きな値を追加する事になる。
                                そのため、最大で+99とする。
                                この値が小さすぎて問題になる事はまず無いはず。

                                また、最大値が固定だと増加パターンが見えてしまうので、ばらつきを持たせる。
                            *@
                            const addCount = 16 / calculateSpan;
                            const limit = Math.random() * 29 + 70;
                            this.count += Math.round(Math.min(addCount, limit));
                        }

                        setTimeout(this.updateCount, updateSpan);
                    }
                },
                add: function () {
                    counter.count++;
                    counter.realCount++;

                    fetch('@Url.Content("~/api/Hinasuki")', { method: 'POST' })
                        .catch(function (error) { });
                },
                tweet: function () {
                    window.open('https://twitter.com/intent/tweet?text=荒木比奈が好きという気持ちをシェアできる全く新しい画期的なWEBサービス「ひなすきボタン」ver.0.3β&url=http%3A%2F%2Fhinasuki.com',
                        '',
                        'width=650, height=450, menuber=no, toolbar=no, scrollbars=yes');
                }
            },
        });
    </script>
</body>
</html>
